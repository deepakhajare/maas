# -*- mode: shell-script -*-
#
# Control a system via ipmitool
#

# Parameters.
power_change={{power_change}}
power_address={{power_address}}
power_user={{power_user}}
power_pass={{power_pass}}
ipmitool={{ipmitool}}
interface={{power_ipmi_interface}}


formulate_power_state() {
    case $1 in
    'Chassis Power is on') echo 'on' ;;
    'Chassis Power is off') echo 'off' ;;
    *)
        echo "Got unknown power state from ipmitool: '$1'" >&2
        exit 1
    esac
}

# Issue command to ipmitool, for the given system.
issue_ipmi_command() {
    ${ipmitool} -I ${interface} -H ${power_address} -U ${power_user} -P ${power_pass} power $1
}


# Get the given system's power state: 'on' or 'off'.
get_power_state() {
    ipmi_state=$(issue_ipmi_command status)
    formulate_power_state ${ipmi_state}
}


if [ "$(get_power_state)" != "${power_change}" ]
then
    issue_ipmi_command ${power_change}
fi
