#cloud-config
password: passw0rd
chpasswd: { expire: False }
ssh_pwauth: True

#apt_proxy: "http://local-proxy:3128/"
#apt_mirror: "http://us.archive.ubuntu.com/ubuntu"
#ssh_import_id: smoser

bucket:
 - &setup |
   cd /root
   (
   #ONE_TIME_PROXY=http://local-proxy:3128/
   PROXY_COPY_SYS_TO_COBBLER=1

   [ -n "$ONE_TIME_PROXY" ] &&
     export http_proxy="$ONE_TIME_PROXY" &&
     export https_proxy="$http_proxy"

   echo === $(date) ====
   debconf-set-selections <<EOF
   cloud-init	cloud-init/datasources	multiselect	NoCloud
   EOF

   export DEBIAN_FRONTEND=noninteractive;
   dpkg-reconfigure cloud-init

   read oldhost < /etc/hostname
   sed -i "/$oldhost/d;/zimmer/d" /etc/hosts
   echo zimmer > /etc/hostname
   hostname zimmer

   echo "127.0.1.2 zimmer-server" >> /etc/hosts
   
   echo === $(date): starting apt ====
   apt_get() { 
     DEBIAN_FRONTEND=noninteractive apt-get \
        --option "Dpkg::Options::=--force-confold" --assume-yes "$@"
   }
   pkgs=""
   pkgs="$pkgs distro-info" # (LP: #960142)
   pkgs="$pkgs libvirt-bin" # for power control via virsh
   pkgs="$pkgs maas" # main maas package
   apt_get update
   apt_get install ${pkgs}
   
   # if local apt is configured to use a proxy, modify
   # cobbler to tell nodes to use that proxy. (LP: #914202)
   if [ "${PROXY_COPY_SYS_TO_COBBLER:-1}" != "0" ] &&
      apt_proxy="" && out=$(apt-config shell apt_proxy Acquire::HTTP::Proxy) &&
      eval $out && [ -n "$apt_proxy" ]; then
      fname=/var/lib/cobbler/snippets/maas_proxy
      [ "${fname}.dist" -ef "$fname" ] || cp "$fname" "$fname.dist"
      sed "s,\(.*mirror/http/proxy string \).*,\1${apt_proxy}," \
         "$fname" > "$fname.zimmer"
      ln -sf ${fname##*/}.zimmer "$fname"
   fi

   ## set up rc.local.d functionality (LP: #915215)
   mkdir -p /etc/rc.local.d
   if [ ! -e /etc/rc.local.d/00-rc-local ]; then
     mv /etc/rc.local /etc/rc.local.d/00-rc-local
   fi
   printf "#!/bin/sh\nrun-parts /etc/rc.local.d\n" >> /etc/rc.local

   # add an rc.local.d job that sets MAAS_PROVISION_URL and cobbler
   # to have the right ip address.
   cat > /etc/rc.local.d/maas-ip-fixup <<"END_MAAS_IP_FIXUP"
   #!/bin/sh
   # reconfigure maas in case our IP address has changed
   # get the right value for maas/default-maas-url. it will take
   # care of restarting things that need to be
   sudo dpkg-reconfigure -pmedium maas

   # now basically wait around until cobbler is available
   max=30; i=0;
   while [ $i -lt $max ]; do
     # will exit 155 if "cobblerd does not appear to be running"
     cobbler system list >/dev/null
     [ $? -eq 155 ] || break
     sleep 1
     i=$(($i+1))
   done

   if [ $i -ne $max ]; then
     # if we talked to cobbler above, then sync it and import-isos
     cobbler sync
     maas-import-isos --update
   fi
   END_MAAS_IP_FIXUP
   chmod 755 /etc/rc.local.d/maas-ip-fixup
   
   cat >> /etc/maas/import_isos <<END
   RELEASES="precise"
   ARCHES="i386 amd64"
   END

   echo === $(date): starting import ====
   maas-import-isos

   sed -i '/zimmer-server/d' /etc/hosts

   echo === $(date): starting cleanup ====
   apt_get clean
   time sh -c 'dd if=/dev/zero of=/out.img; rm /out.img'

   echo === $(date): poweroff ===
   echo === ZIMMER BUILD FINISHED ===
   ) 2>&1 | tee out.log

runcmd:
 - [ sh, -c, *setup ]
 - [ /sbin/poweroff ]
