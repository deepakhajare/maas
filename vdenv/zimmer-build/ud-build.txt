#cloud-config
password: passw0rd
chpasswd: { expire: False }
ssh_pwauth: True

#apt_proxy: "http://local-proxy:3128/"
#apt_mirror: "http://us.archive.ubuntu.com/ubuntu"
#ssh_import_id: smoser

bucket:
 - &setup |
   cd /root
   (
   #ONE_TIME_PROXY=http://local-proxy:3128/
   PROXY_COPY_SYS_TO_COBBLER=1

   echo === $(date) ====
   debconf-set-selections <<EOF
   cobbler  cobbler/server_and_next_server   string   zimmer-server
   cobbler  cobbler/password  password xcobbler
   cloud-init	cloud-init/datasources	multiselect	NoCloud
   EOF

   [ -n "$ONE_TIME_PROXY" ] && export http_proxy="$ONE_TIME_PROXY"
   export DEBIAN_FRONTEND=noninteractive;
   dpkg-reconfigure cloud-init

   read oldhost < /etc/hostname
   sed -i "/$oldhost/d;/zimmer/d" /etc/hosts
   echo zimmer > /etc/hostname
   hostname zimmer

   echo "127.0.1.2 zimmer-server" >> /etc/hosts
   
   echo === $(date): starting apt ====
   apt_get() { 
     DEBIAN_FRONTEND=noninteractive apt-get \
        --option "Dpkg::Options::=--force-confold" --assume-yes "$@"
   }
   pkgs=""
   pkgs="$pkgs distro-info" # (LP: #960142)
   pkgs="$pkgs libvirt-bin" # for power control via virsh
   pkgs="$pkgs cobbler-web" # for debugging and ease of use of cobbler
   pkgs="$pkgs ubuntu-orchestra-logging-server" # (LP: #960149)
   pkgs="$pkgs maas" # main maas package
   apt_get update
   apt_get install ${pkgs}
   
   # if local apt is configured to use a proxy, modify
   # cobbler to tell nodes to use that proxy. (LP: #914202)
   if [ "${PROXY_COPY_SYS_TO_COBBLER:-1}" != "0" ] &&
      apt_proxy="" && out=$(apt-config shell apt_proxy Acquire::HTTP::Proxy) &&
      eval $out && [ -n "$apt_proxy" ]; then
      fname=/var/lib/cobbler/snippets/maas_proxy
      [ "${fname}.dist" -ef "$fname" ] || cp "$fname" "$fname.dist"
      sed "s,\(.*mirror/http/proxy string \).*,\1${apt_proxy}," \
         "$fname" > "$fname.zimmer"
      ln -sf ${fname##*/}.zimmer "$fname"
   fi

   cat >> /etc/maas/import_isos <<END
   RELEASES="precise"
   ARCHES="i386 amd64"
   END

   echo === $(date): starting import ====
   maas-import-isos

   sed -i '/zimmer-server/d' /etc/hosts

   echo === $(date): starting cleanup ====
   apt_get clean
   time sh -c 'dd if=/dev/zero of=/out.img; rm /out.img'

   echo === $(date): poweroff ===
   echo === ZIMMER BUILD FINISHED ===
   ) 2>&1 | tee out.log

runcmd:
 - [ sh, -c, *setup ]
 - [ /sbin/poweroff ]
