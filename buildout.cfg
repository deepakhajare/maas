[buildout]
parts =
  flake8
  maas
  maas-test
  maastesting-test
  pserv
  pserv-test
  repl
  sphinx
  txlongpoll
extensions = buildout-versions
buildout_versions_file = versions.cfg
versions = versions
extends = versions.cfg
offline = false

# Since MAAS's main deployment target is Ubuntu, all runtime
# dependencies should come from python packages. However, it's okay
# for development-time dependencies to come from eggs.
include-site-packages = true

prefer-final = true
allow-picked-versions = false

[common]
extra-paths =
  ${buildout:directory}/etc
  ${buildout:directory}/src
  ${buildout:directory}
test-eggs =
  coverage
  fixtures
  lxml
  netaddr
  nose
  nose-subunit
  postgresfixture
  python-subunit
  saucelabsfixture
  sst
  testresources
  testscenarios
  testtools

[database]
recipe = z3c.recipe.scripts
eggs = postgresfixture
extra-paths = ${common:extra-paths}
interpreter =
entry-points = database=postgresfixture.main:main
scripts = database

[maas]
recipe = zc.recipe.egg
# avahi and dbus should be listed as eggs
# but they don't have links on PyPI and that makes buildout really
# unhappy. It refuses to see them, even if they are in site-packages :-(
# We rely on them being installed through system packages instead.
dev-eggs =
  django-debug-toolbar
test-eggs =
  ${common:test-eggs}
  django-nose
eggs =
  ${maas:dev-eggs}
  ${maas:test-eggs}
  celery
  convoy
  django
  django-piston
  docutils
  lockfile
  oauth
  oops
  oops-datedir-repo
  oops-wsgi
  psycopg2
  pyasn1
  rabbitfixture
  South
  Tempita
  twisted
entry-points =
  maas=django.core.management:execute_from_command_line
initialization =
  from os import environ
  environ.setdefault("DJANGO_SETTINGS_MODULE", "maas.development")
scripts = maas
extra-paths =
  ${common:extra-paths}

[maas-test]
recipe = zc.recipe.egg
eggs =
  ${maas:eggs}
entry-points =
  test.maas=django.core.management:execute_from_command_line
initialization =
  ${maas:initialization}
  sys.argv[1:1] = [
      "test", "--noinput", "--exclude=provisioningserver",
      "--exclude=maastesting"]
scripts = test.maas
extra-paths =
  ${maas:extra-paths}

[maastesting-test]
recipe = zc.recipe.egg
eggs =
  ${maas:eggs}
entry-points =
  test.maastesting=nose.core:TestProgram
initialization =
  sys.argv[1:1] = ["--where=src/maastesting"]
extra-paths = ${common:extra-paths}
scripts =
  test.maastesting
scripts = test.maastesting
extra-paths =
  ${maas:extra-paths}

[pserv]
recipe = zc.recipe.egg
eggs =
  formencode
  oops-datedir-repo
  oops-twisted
  pyyaml
  Tempita
  twisted
  txamqp
entry-points =
  maas-provision=provisioningserver.__main__:main
  twistd.pserv=twisted.scripts.twistd:run
extra-paths =
  ${common:extra-paths}
  contrib/python-tx-tftp
scripts =
  maas-provision
  twistd.pserv

[pserv-test]
recipe = zc.recipe.egg
eggs =
  ${pserv:eggs}
  ${common:test-eggs}
  rabbitfixture
entry-points =
  test.pserv=nose.core:TestProgram
initialization =
  sys.argv[1:1] = ["--where=src/provisioningserver"]
extra-paths = ${pserv:extra-paths}
scripts =
  test.pserv

[flake8]
recipe = zc.recipe.egg
eggs =
  flake8
entry-points =
  flake8=flake8.run:main

[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
build = ${buildout:directory}/docs/_build
extra-paths = ${common:extra-paths}
eggs =
  ${maas:eggs}
  ${pserv:eggs}

# Convenient REPLs with all eggs available.
[repl]
recipe = z3c.recipe.scripts
eggs =
  ${maas:eggs}
  ${pserv:eggs}
  ${common:test-eggs}
  ipython
extra-paths = ${common:extra-paths}
interpreter = py
scripts = ipython=ipy

[txlongpoll]
recipe = z3c.recipe.scripts
eggs =
  txlongpoll
  oops-datedir-repo
  oops-twisted
  pyyaml
  twisted
  txamqp
entry-points = twistd.txlongpoll=twisted.scripts.twistd:run
scripts = twistd.txlongpoll
